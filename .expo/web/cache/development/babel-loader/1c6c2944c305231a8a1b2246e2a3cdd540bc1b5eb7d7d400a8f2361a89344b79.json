{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport HomeScreenBottom from \"./components/bottom-nav-bar/HomeScreenBottom\";\nimport ProfileScreenBottom from \"./components/bottom-nav-bar/ProfileScreenBottom\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nfunction BottomTabNavigator() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var color = _ref2.color,\n              size = _ref2.size;\n            var iconName;\n            if (route.name === 'Home') {\n              iconName = 'home';\n            } else if (route.name === 'Profile') {\n              iconName = 'person-circle';\n            }\n            return _jsx(Icon, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          }\n        };\n      },\n      tabBarOptions: {\n        activeTintColor: 'blue',\n        inactiveTintColor: 'gray',\n        style: {\n          backgroundColor: 'white',\n          borderTopWidth: 0,\n          elevation: 0\n        }\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Home\",\n        component: HomeScreenBottom,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var color = _ref3.color,\n              size = _ref3.size;\n            return _jsxs(View, {\n              style: {\n                alignItems: 'center'\n              },\n              children: [_jsx(Icon, {\n                name: \"home\",\n                color: color,\n                size: size\n              }), _jsx(Text, {\n                style: {\n                  color: color,\n                  fontSize: 12\n                },\n                children: \"Home\"\n              })]\n            });\n          }\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Profile\",\n        component: ProfileScreenBottom,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref4) {\n            var color = _ref4.color,\n              size = _ref4.size;\n            return _jsxs(View, {\n              style: {\n                alignItems: 'center'\n              },\n              children: [_jsx(Icon, {\n                name: \"person-circle\",\n                color: color,\n                size: size\n              }), _jsx(Text, {\n                style: {\n                  color: color,\n                  fontSize: 12\n                },\n                children: \"Profile\"\n              })]\n            });\n          }\n        }\n      })]\n    })\n  });\n}\nexport default BottomTabNavigator;","map":{"version":3,"names":["NavigationContainer","createBottomTabNavigator","Icon","HomeScreenBottom","ProfileScreenBottom","jsx","_jsx","jsxs","_jsxs","Tab","BottomTabNavigator","children","Navigator","screenOptions","_ref","route","tabBarIcon","_ref2","color","size","iconName","name","tabBarOptions","activeTintColor","inactiveTintColor","style","backgroundColor","borderTopWidth","elevation","Screen","component","options","_ref3","View","alignItems","Text","fontSize","_ref4"],"sources":["/Users/hasannaseer/FindHalalMeal/components/bottom-nav-bar/BottomNavigator.js"],"sourcesContent":["import { View, Text } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Icon from 'react-native-vector-icons/Ionicons';\nimport HomeScreenBottom from './components/bottom-nav-bar/HomeScreenBottom';\nimport ProfileScreenBottom from './components/bottom-nav-bar/ProfileScreenBottom';\n\nconst Tab = createBottomTabNavigator();\n\n\nfunction BottomTabNavigator() {\n  return (\n    <NavigationContainer>\n      <Tab.Navigator\n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ color, size }) => {\n            let iconName;\n            if (route.name === 'Home') {\n              iconName = 'home';\n            } else if (route.name === 'Profile') {\n              iconName = 'person-circle';\n            }\n            return <Icon name={iconName} size={size} color={color} />;\n          },\n        })}\n        tabBarOptions={{\n          activeTintColor: 'blue',\n          inactiveTintColor: 'gray',\n          style: {\n            backgroundColor: 'white',\n            borderTopWidth: 0,\n            elevation: 0,\n          },\n        }}>\n        <Tab.Screen\n          name=\"Home\"\n          component={HomeScreenBottom}\n          options={{\n            tabBarIcon: ({ color, size }) => (\n              <View style={{ alignItems: 'center' }}>\n                <Icon name=\"home\" color={color} size={size} />\n                <Text style={{ color: color, fontSize: 12 }}>Home</Text>\n              </View>\n            ),\n          }}\n        />\n        <Tab.Screen\n          name=\"Profile\"\n          component={ProfileScreenBottom}\n          options={{\n            tabBarIcon: ({ color, size }) => (\n              <View style={{ alignItems: 'center' }}>\n                <Icon name=\"person-circle\" color={color} size={size} />\n                <Text style={{ color: color, fontSize: 12 }}>Profile</Text>\n              </View>\n            ),\n          }}\n        />\n      </Tab.Navigator>\n    </NavigationContainer>\n  );\n}\n\nexport default BottomTabNavigator;\n"],"mappings":";;AACA,SAASA,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,OAAOC,IAAI;AACX,OAAOC,gBAAgB;AACvB,OAAOC,mBAAmB;AAAwD,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAElF,IAAMC,GAAG,GAAGR,wBAAwB,CAAC,CAAC;AAGtC,SAASS,kBAAkBA,CAAA,EAAG;EAC5B,OACEJ,IAAA,CAACN,mBAAmB;IAAAW,QAAA,EAClBH,KAAA,CAACC,GAAG,CAACG,SAAS;MACZC,aAAa,EAAE,SAAAA,cAAAC,IAAA;QAAA,IAAGC,KAAK,GAAAD,IAAA,CAALC,KAAK;QAAA,OAAQ;UAC7BC,UAAU,EAAE,SAAAA,WAAAC,KAAA,EAAqB;YAAA,IAAlBC,KAAK,GAAAD,KAAA,CAALC,KAAK;cAAEC,IAAI,GAAAF,KAAA,CAAJE,IAAI;YACxB,IAAIC,QAAQ;YACZ,IAAIL,KAAK,CAACM,IAAI,KAAK,MAAM,EAAE;cACzBD,QAAQ,GAAG,MAAM;YACnB,CAAC,MAAM,IAAIL,KAAK,CAACM,IAAI,KAAK,SAAS,EAAE;cACnCD,QAAQ,GAAG,eAAe;YAC5B;YACA,OAAOd,IAAA,CAACJ,IAAI;cAACmB,IAAI,EAAED,QAAS;cAACD,IAAI,EAAEA,IAAK;cAACD,KAAK,EAAEA;YAAM,CAAE,CAAC;UAC3D;QACF,CAAC;MAAA,CAAE;MACHI,aAAa,EAAE;QACbC,eAAe,EAAE,MAAM;QACvBC,iBAAiB,EAAE,MAAM;QACzBC,KAAK,EAAE;UACLC,eAAe,EAAE,OAAO;UACxBC,cAAc,EAAE,CAAC;UACjBC,SAAS,EAAE;QACb;MACF,CAAE;MAAAjB,QAAA,GACFL,IAAA,CAACG,GAAG,CAACoB,MAAM;QACTR,IAAI,EAAC,MAAM;QACXS,SAAS,EAAE3B,gBAAiB;QAC5B4B,OAAO,EAAE;UACPf,UAAU,EAAE,SAAAA,WAAAgB,KAAA;YAAA,IAAGd,KAAK,GAAAc,KAAA,CAALd,KAAK;cAAEC,IAAI,GAAAa,KAAA,CAAJb,IAAI;YAAA,OACxBX,KAAA,CAACyB,IAAI;cAACR,KAAK,EAAE;gBAAES,UAAU,EAAE;cAAS,CAAE;cAAAvB,QAAA,GACpCL,IAAA,CAACJ,IAAI;gBAACmB,IAAI,EAAC,MAAM;gBAACH,KAAK,EAAEA,KAAM;gBAACC,IAAI,EAAEA;cAAK,CAAE,CAAC,EAC9Cb,IAAA,CAAC6B,IAAI;gBAACV,KAAK,EAAE;kBAAEP,KAAK,EAAEA,KAAK;kBAAEkB,QAAQ,EAAE;gBAAG,CAAE;gBAAAzB,QAAA,EAAC;cAAI,CAAM,CAAC;YAAA,CACpD,CAAC;UAAA;QAEX;MAAE,CACH,CAAC,EACFL,IAAA,CAACG,GAAG,CAACoB,MAAM;QACTR,IAAI,EAAC,SAAS;QACdS,SAAS,EAAE1B,mBAAoB;QAC/B2B,OAAO,EAAE;UACPf,UAAU,EAAE,SAAAA,WAAAqB,KAAA;YAAA,IAAGnB,KAAK,GAAAmB,KAAA,CAALnB,KAAK;cAAEC,IAAI,GAAAkB,KAAA,CAAJlB,IAAI;YAAA,OACxBX,KAAA,CAACyB,IAAI;cAACR,KAAK,EAAE;gBAAES,UAAU,EAAE;cAAS,CAAE;cAAAvB,QAAA,GACpCL,IAAA,CAACJ,IAAI;gBAACmB,IAAI,EAAC,eAAe;gBAACH,KAAK,EAAEA,KAAM;gBAACC,IAAI,EAAEA;cAAK,CAAE,CAAC,EACvDb,IAAA,CAAC6B,IAAI;gBAACV,KAAK,EAAE;kBAAEP,KAAK,EAAEA,KAAK;kBAAEkB,QAAQ,EAAE;gBAAG,CAAE;gBAAAzB,QAAA,EAAC;cAAO,CAAM,CAAC;YAAA,CACvD,CAAC;UAAA;QAEX;MAAE,CACH,CAAC;IAAA,CACW;EAAC,CACG,CAAC;AAE1B;AAEA,eAAeD,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}