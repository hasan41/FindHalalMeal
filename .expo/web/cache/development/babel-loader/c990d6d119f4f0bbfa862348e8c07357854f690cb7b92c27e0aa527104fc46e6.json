{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport HomeScreen from \"./HomeScreenBottom\";\nimport ProfileScreen from \"./ProfileScreenBottom\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nfunction BottomTabNavigator() {\n  return _jsx(_Fragment, {\n    children: _jsxs(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var color = _ref2.color,\n              size = _ref2.size;\n            var iconName;\n            if (route.name === 'Home') {\n              iconName = 'home';\n            } else if (route.name === 'Profile') {\n              iconName = 'person-circle';\n            }\n            return _jsx(Icon, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          },\n          tabBarLabel: function tabBarLabel(_ref3) {\n            var focused = _ref3.focused,\n              color = _ref3.color;\n            var labelName;\n            if (route.name === 'Home') {\n              labelName = 'Home';\n            } else if (route.name === 'Profile') {\n              labelName = 'Profile';\n            }\n            return _jsx(Text, {\n              style: {\n                color: color,\n                fontSize: 12\n              },\n              children: labelName\n            });\n          }\n        };\n      },\n      tabBarOptions: {\n        activeTintColor: 'blue',\n        inactiveTintColor: 'gray',\n        style: {\n          backgroundColor: 'white',\n          borderTopWidth: 0,\n          elevation: 0\n        }\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Home\",\n        component: HomeScreen\n      }), _jsx(Tab.Screen, {\n        name: \"Profile\",\n        component: ProfileScreen\n      })]\n    })\n  });\n}\nexport default BottomTabNavigator;","map":{"version":3,"names":["React","View","Text","createBottomTabNavigator","Icon","HomeScreen","ProfileScreen","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Tab","BottomTabNavigator","children","Navigator","screenOptions","_ref","route","tabBarIcon","_ref2","color","size","iconName","name","tabBarLabel","_ref3","focused","labelName","style","fontSize","tabBarOptions","activeTintColor","inactiveTintColor","backgroundColor","borderTopWidth","elevation","Screen","component"],"sources":["/Users/hasannaseer/FindHalalMeal/components/bottom-nav-bar/BottomNavigator.js"],"sourcesContent":["import React from 'react';\nimport { View, Text } from 'react-native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Icon from 'react-native-vector-icons/Ionicons';\nimport HomeScreen from './HomeScreenBottom';\nimport ProfileScreen from './ProfileScreenBottom';\n\nconst Tab = createBottomTabNavigator();\n\nfunction BottomTabNavigator() {\n  return (\n    <>\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ color, size }) => {\n          let iconName;\n          if (route.name === 'Home') {\n            iconName = 'home';\n          } else if (route.name === 'Profile') {\n            iconName = 'person-circle';\n          }\n          return <Icon name={iconName} size={size} color={color} />;\n        },\n        tabBarLabel: ({ focused, color }) => {\n          let labelName;\n          if (route.name === 'Home') {\n            labelName = 'Home';\n          } else if (route.name === 'Profile') {\n            labelName = 'Profile';\n          }\n          return <Text style={{ color: color, fontSize: 12 }}>{labelName}</Text>;\n        },\n      })}\n      tabBarOptions={{\n        activeTintColor: 'blue',\n        inactiveTintColor: 'gray',\n        style: {\n          backgroundColor: 'white',\n          borderTopWidth: 0,\n          elevation: 0,\n        },\n      }}>\n      <Tab.Screen name=\"Home\" component={HomeScreen} />\n      <Tab.Screen name=\"Profile\" component={ProfileScreen} />\n    </Tab.Navigator>\n    </>\n  );\n}\n\nexport default BottomTabNavigator;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAE1B,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,OAAOC,IAAI;AACX,OAAOC,UAAU;AACjB,OAAOC,aAAa;AAA8B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,IAAMC,GAAG,GAAGV,wBAAwB,CAAC,CAAC;AAEtC,SAASW,kBAAkBA,CAAA,EAAG;EAC5B,OACEN,IAAA,CAAAI,SAAA;IAAAG,QAAA,EACAL,KAAA,CAACG,GAAG,CAACG,SAAS;MACZC,aAAa,EAAE,SAAAA,cAAAC,IAAA;QAAA,IAAGC,KAAK,GAAAD,IAAA,CAALC,KAAK;QAAA,OAAQ;UAC7BC,UAAU,EAAE,SAAAA,WAAAC,KAAA,EAAqB;YAAA,IAAlBC,KAAK,GAAAD,KAAA,CAALC,KAAK;cAAEC,IAAI,GAAAF,KAAA,CAAJE,IAAI;YACxB,IAAIC,QAAQ;YACZ,IAAIL,KAAK,CAACM,IAAI,KAAK,MAAM,EAAE;cACzBD,QAAQ,GAAG,MAAM;YACnB,CAAC,MAAM,IAAIL,KAAK,CAACM,IAAI,KAAK,SAAS,EAAE;cACnCD,QAAQ,GAAG,eAAe;YAC5B;YACA,OAAOhB,IAAA,CAACJ,IAAI;cAACqB,IAAI,EAAED,QAAS;cAACD,IAAI,EAAEA,IAAK;cAACD,KAAK,EAAEA;YAAM,CAAE,CAAC;UAC3D,CAAC;UACDI,WAAW,EAAE,SAAAA,YAAAC,KAAA,EAAwB;YAAA,IAArBC,OAAO,GAAAD,KAAA,CAAPC,OAAO;cAAEN,KAAK,GAAAK,KAAA,CAALL,KAAK;YAC5B,IAAIO,SAAS;YACb,IAAIV,KAAK,CAACM,IAAI,KAAK,MAAM,EAAE;cACzBI,SAAS,GAAG,MAAM;YACpB,CAAC,MAAM,IAAIV,KAAK,CAACM,IAAI,KAAK,SAAS,EAAE;cACnCI,SAAS,GAAG,SAAS;YACvB;YACA,OAAOrB,IAAA,CAACN,IAAI;cAAC4B,KAAK,EAAE;gBAAER,KAAK,EAAEA,KAAK;gBAAES,QAAQ,EAAE;cAAG,CAAE;cAAAhB,QAAA,EAAEc;YAAS,CAAO,CAAC;UACxE;QACF,CAAC;MAAA,CAAE;MACHG,aAAa,EAAE;QACbC,eAAe,EAAE,MAAM;QACvBC,iBAAiB,EAAE,MAAM;QACzBJ,KAAK,EAAE;UACLK,eAAe,EAAE,OAAO;UACxBC,cAAc,EAAE,CAAC;UACjBC,SAAS,EAAE;QACb;MACF,CAAE;MAAAtB,QAAA,GACFP,IAAA,CAACK,GAAG,CAACyB,MAAM;QAACb,IAAI,EAAC,MAAM;QAACc,SAAS,EAAElC;MAAW,CAAE,CAAC,EACjDG,IAAA,CAACK,GAAG,CAACyB,MAAM;QAACb,IAAI,EAAC,SAAS;QAACc,SAAS,EAAEjC;MAAc,CAAE,CAAC;IAAA,CAC1C;EAAC,CACd,CAAC;AAEP;AAEA,eAAeQ,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}